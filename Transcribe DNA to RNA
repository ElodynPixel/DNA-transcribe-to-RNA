{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled2.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyOoocV+b3t6970Z8sVmYIuc",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/ElodynPixel/DNA-transcribe-to-RNA/blob/main/Transcribe%20DNA%20to%20RNA\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "H8fMVgThaa-8",
        "outputId": "3a617194-bb59-4dd7-b4d8-c424531bbb77"
      },
      "source": [
        "#Finding out the RNA transcript from a DNA sequence\n",
        "\n",
        "dnaseq = '''GCCCGTTGCCAGGCGCCGCCTTATAAACCTCCCGCTCGGCCGCCGCCGCGCCGAGTCCGAGCCGCGCACG\n",
        "GGACCGGGACGCAGCGGAGCCCGCGGGCCCCGCGTTCATGCACCGCCTGCTGGCCTGGGACGCAGCATGC\n",
        "CTCCCGCCGCCGCCCGCCGCCTTTAGACCCATGGAAGTGGCCAACTTCTACTACGAGCCCGACTGCCTGG\n",
        "CCTACGGGGCCAAGGCGGCCCGCGCCGCGCCGCGCGCCCCCGCCGCCGAGCCGGCCATTGGCGAGCACGA\n",
        "GCGCGCCATCGACTTCAGCCCCTACCTGGAGCCGCTCGCGCCCGCCGCGGACTTCGCCGCGCCCGCGCCC\n",
        "GCGCACCACGACTTCCTCTCCGACCTCTTCGCCGACGACTACGGCGCCAAGCCGAGCAAGAAGCCGGCCG\n",
        "ACTACGGTTACGTGAGCCTCGGCCGCGCGGGCGCCAAGGCCGCGCCGCCCGCCTGCTTCCCGCCGCCGCC\n",
        "TCCCGCCGCGCTCAAGGCGGAGCCGGGCTTCGAACCCGCGGACTGCAAGCGCGCGGACGACGCGCCCGCC\n",
        "ATGGCGGCCGGTTTCCCGTTCGCCCTGCGCGCCTACCTGGGCTACCAGGCGACGCCGAGCGGCAGCAGCG\n",
        "GCAGCCTGTCCACGTCGTCGTCGTCCAGCCCGCCCGGCACGCCGAGCCCCGCCGACGCCAAGGCCGCGCC\n",
        "CGCCGCCTGCTTCGCGGGGCCGCCGGCCGCGCCCGCCAAGGCCAAGGCCAAGAAGACGGTGGACAAGCTG\n",
        "AGCGACGAGTACAAGATGCGGCGCGAGCGCAACAACATCGCGGTGCGCAAGAGCCGCGACAAGGCCAAGA\n",
        "TGCGCAACCTGGAGACGCAGCACAAGGTGCTGGAGCTGACGGCGGAGAACGAGCGGCTGCAGAAGAAGGT\n",
        "GGAGCAGCTGTCGCGAGAGCTCAGCACCCTGCGGAACTTGTTCAAGCAGCTGCCCGAGCCGCTGCTGGCC\n",
        "TCGGCGGGCCACTGCTAGCGCGGCGCGGGTGGCGTGGGGGGCGCCGCGGCCACCCTGGGCACCGTGCGCC\n",
        "CTGCCCCGCGCGCTCCGGCCCCGCGCGCGCGCCCGGACCACCGTGCGTGCCCTGCGCGCACCTGCACCTG\n",
        "CACCGAGGGGACACCGCGGGCACACCGCGGGCACCGCGCGCACGCACCTGCACAGCGCACCGGGTTTCGG\n",
        "GACTTGATGCAATCCGGATCAAACGTGGCTGAGCGCGTGTGGACACGGGACTGACGCAACACACGTGTAA\n",
        "CTGTCAGCCGGGCCCTGAGTAATCACTTAAAGATGTTCCTGCGGGGTTGTTGATGTTTTTGGTTTTGTTT\n",
        "TTGTTTTTTGTTTTGTTTTGTTTTTTTTTTTGGTCTTATTATTTTTTTTGTATTATATAAAAAAGTTCTA\n",
        "TTTCTATGAGAAAAGAGGCGTATGTATATTTTGAGAACCTTTTCCGTTTCGAGCATTAAAGTGAAGACAT\n",
        "TTTAATAAACTTTTTTGGAGAATGTTTAAAAGCCTTTTGGGGGCAGTA'''\n",
        "#A-U T-A C_G G_C\n",
        "\n",
        "transcript = dnaseq.maketrans(\"ATGC\", \"UACG\")\n",
        "\n",
        "print(dnaseq.translate(transcript))\n"
      ],
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "CGGGCAACGGUCCGCGGCGGAAUAUUUGGAGGGCGAGCCGGCGGCGGCGCGGCUCAGGCUCGGCGCGUGC\n",
            "CCUGGCCCUGCGUCGCCUCGGGCGCCCGGGGCGCAAGUACGUGGCGGACGACCGGACCCUGCGUCGUACG\n",
            "GAGGGCGGCGGCGGGCGGCGGAAAUCUGGGUACCUUCACCGGUUGAAGAUGAUGCUCGGGCUGACGGACC\n",
            "GGAUGCCCCGGUUCCGCCGGGCGCGGCGCGGCGCGCGGGGGCGGCGGCUCGGCCGGUAACCGCUCGUGCU\n",
            "CGCGCGGUAGCUGAAGUCGGGGAUGGACCUCGGCGAGCGCGGGCGGCGCCUGAAGCGGCGCGGGCGCGGG\n",
            "CGCGUGGUGCUGAAGGAGAGGCUGGAGAAGCGGCUGCUGAUGCCGCGGUUCGGCUCGUUCUUCGGCCGGC\n",
            "UGAUGCCAAUGCACUCGGAGCCGGCGCGCCCGCGGUUCCGGCGCGGCGGGCGGACGAAGGGCGGCGGCGG\n",
            "AGGGCGGCGCGAGUUCCGCCUCGGCCCGAAGCUUGGGCGCCUGACGUUCGCGCGCCUGCUGCGCGGGCGG\n",
            "UACCGCCGGCCAAAGGGCAAGCGGGACGCGCGGAUGGACCCGAUGGUCCGCUGCGGCUCGCCGUCGUCGC\n",
            "CGUCGGACAGGUGCAGCAGCAGCAGGUCGGGCGGGCCGUGCGGCUCGGGGCGGCUGCGGUUCCGGCGCGG\n",
            "GCGGCGGACGAAGCGCCCCGGCGGCCGGCGCGGGCGGUUCCGGUUCCGGUUCUUCUGCCACCUGUUCGAC\n",
            "UCGCUGCUCAUGUUCUACGCCGCGCUCGCGUUGUUGUAGCGCCACGCGUUCUCGGCGCUGUUCCGGUUCU\n",
            "ACGCGUUGGACCUCUGCGUCGUGUUCCACGACCUCGACUGCCGCCUCUUGCUCGCCGACGUCUUCUUCCA\n",
            "CCUCGUCGACAGCGCUCUCGAGUCGUGGGACGCCUUGAACAAGUUCGUCGACGGGCUCGGCGACGACCGG\n",
            "AGCCGCCCGGUGACGAUCGCGCCGCGCCCACCGCACCCCCCGCGGCGCCGGUGGGACCCGUGGCACGCGG\n",
            "GACGGGGCGCGCGAGGCCGGGGCGCGCGCGCGGGCCUGGUGGCACGCACGGGACGCGCGUGGACGUGGAC\n",
            "GUGGCUCCCCUGUGGCGCCCGUGUGGCGCCCGUGGCGCGCGUGCGUGGACGUGUCGCGUGGCCCAAAGCC\n",
            "CUGAACUACGUUAGGCCUAGUUUGCACCGACUCGCGCACACCUGUGCCCUGACUGCGUUGUGUGCACAUU\n",
            "GACAGUCGGCCCGGGACUCAUUAGUGAAUUUCUACAAGGACGCCCCAACAACUACAAAAACCAAAACAAA\n",
            "AACAAAAAACAAAACAAAACAAAAAAAAAAACCAGAAUAAUAAAAAAAACAUAAUAUAUUUUUUCAAGAU\n",
            "AAAGAUACUCUUUUCUCCGCAUACAUAUAAAACUCUUGGAAAAGGCAAAGCUCGUAAUUUCACUUCUGUA\n",
            "AAAUUAUUUGAAAAAACCUCUUACAAAUUUUCGGAAAACCCCCGUCAU\n"
          ],
          "name": "stdout"
        }
      ]
    }
  ]
}